import { useEffect, useState } from "react";
import { createClient } from "@supabase/supabase-js";

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);

export default function AdminUsers() {
  const [users, setUsers] = useState([]);

  useEffect(() => {
    (async () => {
      const { data } = await supabase.from("users").select("*");
      if (data) setUsers(data);
    })();
  }, []);

  const banUser = async (id: string) => {
    await fetch("/api/admin-ban", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ user_id: id }),
    });
    setUsers(users.map(u => u.id === id ? { ...u, is_banned: true } : u));
  };

  const verifyUser = async (id: string) => {
    await fetch("/api/admin-verify", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ user_id: id }),
    });
    setUsers(users.map(u => u.id === id ? { ...u, is_verified: true } : u));
  };

  const grantBonus = async (id: string) => {
    const amount = prompt("–°–∫–æ–ª—å–∫–æ –±–æ–Ω—É—Å–æ–≤ –Ω–∞—á–∏—Å–ª–∏—Ç—å (‚ÇΩ)?");
    if (!amount) return;
    await fetch("/api/admin-bonus", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ user_id: id, amount_rub: parseFloat(amount) }),
    });
    alert("–ë–æ–Ω—É—Å –Ω–∞—á–∏—Å–ª–µ–Ω");
  };

  return (
    <div className="p-6">
      <h1 className="text-xl font-bold mb-4">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h1>
      {users.map((user) => (
        <div key={user.id} className="border p-3 rounded mb-3">
          <p><b>ID:</b> {user.id}</p>
          <p><b>Username:</b> {user.username}</p>
          <p><b>–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è:</b> {user.is_verified ? "‚úÖ" : "‚ùå"}</p>
          <p><b>–ë–∞–Ω:</b> {user.is_banned ? "üö´" : "‚Äî"}</p>
          <div className="mt-2">
            <button onClick={() => verifyUser(user.id)} className="bg-blue-500 text-white px-3 py-1 rounded mr-2">–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å</button>
            <button onClick={() => banUser(user.id)} className="bg-red-500 text-white px-3 py-1 rounded mr-2">–ó–∞–±–∞–Ω–∏—Ç—å</button>
            <button onClick={() => grantBonus(user.id)} className="bg-green-500 text-white px-3 py-1 rounded">–ë–æ–Ω—É—Å</button>
          </div>
        </div>
      ))}
    </div>
  );
}