import Layout from "../components/Layout";
import { useState } from "react";

export default function TopUp() {
  const [starsAmount, setStarsAmount] = useState<string>("");
  const [tonAmount, setTonAmount] = useState<string>("");

  const tg: any =
    typeof window !== "undefined" ? (window as any).Telegram?.WebApp : null;

  const openStarsPayment = async () => {
    const stars = Number(starsAmount);
    if (!stars || stars <= 0) return alert("–£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥.");

    const tgId =
      (window as any).Telegram?.WebApp?.initDataUnsafe?.user?.id ??
      (window as any).Telegram?.WebApp?.initDataUnsafe?.receiver?.id;
    if (!tgId) return alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å Telegram ID.");

    try {
      const res = await fetch("/api/topup-stars", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          // –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º initData –¥–ª—è –¥–æ–ø.–ø—Ä–æ–≤–µ—Ä–æ–∫ –Ω–∞ –±—ç–∫–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
          "x-telegram-init-data": tg?.initData || "",
        },
        body: JSON.stringify({ tg_id: Number(tgId), amount_stars: stars }),
      });

      const json = await res.json().catch(() => ({} as any));

      if (!res.ok || !json?.ok) {
        const msg =
          json?.error ||
          json?.description ||
          "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–≤–æ–π—Å–∞ (stars).";
        return alert(msg);
      }

      const link: string = json.invoice_link; // —É–∂–µ –≤–∏–¥–∞ https://t.me/$xxxx
      // 1) –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É (–µ—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ ‚Äî –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ Telegram)
      if (tg?.openInvoice) tg.openInvoice(link);
      else if (tg?.openTelegramLink) tg.openTelegramLink(link);
      else if (tg?.openLink) tg.openLink(link, { try_instant_view: true });
      else window.open(link, "_blank");

      // 2) –ù–µ–±–æ–ª—å—à–∞—è "–∞–Ω–∏–º–∞—Ü–∏—è" –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, —á—Ç–æ –¥—É–±–ª–∏—Ä—É—é—â–∞—è —Å—Å—ã–ª–∫–∞ —É—à–ª–∞ –≤ –õ–°
      const el = document.createElement("div");
      el.className =
        "fixed inset-0 z-50 flex items-center justify-center bg-black/40";
      el.innerHTML =
        '<div class="bg-white rounded-2xl p-6 text-center shadow-xl animate-pulse">' +
        '<div class="text-3xl mb-2">üì©</div>' +
        '<div class="font-semibold mb-1">–°—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–∫—É</div>' +
        '<div class="text-sm text-slate-500">–û—Ç–∫—Ä–æ–π –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º –∏ –æ–ø–ª–∞—Ç–∏</div>' +
        "</div>";
      document.body.appendChild(el);
      setTimeout(() => el.remove(), 1800);
    } catch (e) {
      console.error(e);
      alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–≤–æ–π—Å–∞.");
    }
  };

  const openCryptoCloud = () => {
    const ton = Number(tonAmount);
    if (!ton || ton <= 0) return alert("–£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ TON.");
    const base = process.env.NEXT_PUBLIC_CRYPTOCLOUD_URL || "";
    if (!base) return alert("–î–æ–±–∞–≤—å NEXT_PUBLIC_CRYPTOCLOUD_URL –≤ .env");
    const url = base.includes("?") ? `${base}&amount=${ton}` : `${base}?amount=${ton}`;
    if (tg?.openLink) tg.openLink(url, { try_instant_view: true });
    else window.open(url, "_blank");
  };

  return (
    <Layout title="–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å">
      <div className="max-w-md mx-auto px-4 pt-8 space-y-6">
        <div className="bg-white rounded-2xl p-5 shadow-sm">
          <div className="font-semibold mb-2">–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∑–≤—ë–∑–¥–∞–º–∏ Telegram</div>
          <div className="text-xs text-slate-500 mb-3">–ö—É—Ä—Å: 2 ‚≠ê = 1 ‚ÇΩ</div>
          <div className="flex gap-2">
            <input
              type="number"
              value={starsAmount}
              onChange={(e) => setStarsAmount(e.target.value)}
              placeholder="–°–∫–æ–ª—å–∫–æ ‚≠ê"
              className="border rounded-xl flex-1 px-3 py-2"
            />
            <button
              onClick={openStarsPayment}
              className="bg-blue-600 text-white rounded-xl px-4 py-2"
            >
              –û–ø–ª–∞—Ç–∏—Ç—å ‚≠ê
            </button>
          </div>
        </div>

        <div className="bg-white rounded-2xl p-5 shadow-sm">
          <div className="font-semibold mb-2">–ü–æ–ø–æ–ª–Ω–∏—Ç—å TON —á–µ—Ä–µ–∑ CryptoCloud</div>
          <div className="text-xs text-slate-500 mb-3">–ö—É—Ä—Å: 1 TON = 300 ‚ÇΩ</div>
          <div className="flex gap-2">
            <input
              type="number"
              value={tonAmount}
              onChange={(e) => setTonAmount(e.target.value)}
              placeholder="–°–∫–æ–ª—å–∫–æ TON"
              className="border rounded-xl flex-1 px-3 py-2"
            />
            <button
              onClick={openCryptoCloud}
              className="bg-slate-900 text-white rounded-xl px-4 py-2"
            >
              –û–ø–ª–∞—Ç–∏—Ç—å TON
            </button>
          </div>
        </div>
      </div>
    </Layout>
  );
}
